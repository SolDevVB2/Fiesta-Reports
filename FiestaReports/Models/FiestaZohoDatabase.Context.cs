//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FiestaReports.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FiestaZohoDatabaseEntities : DbContext
    {
        public FiestaZohoDatabaseEntities()
            : base("name=FiestaZohoDatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Fiesta_Employee> Fiesta_Employee { get; set; }
        public virtual DbSet<Fiesta_EmpStates> Fiesta_EmpStates { get; set; }
        public virtual DbSet<Fiesta_EmpStoreReport> Fiesta_EmpStoreReport { get; set; }
        public virtual DbSet<Fiesta_Store> Fiesta_Store { get; set; }
        public virtual DbSet<ReportFileUpload> ReportFileUploads { get; set; }
        public virtual DbSet<Fiesta_EmpStore> Fiesta_EmpStore { get; set; }
        public virtual DbSet<Fiesta_ExcelCompare> Fiesta_ExcelCompare { get; set; }
        public virtual DbSet<Fiesta_Report> Fiesta_Report { get; set; }
        public virtual DbSet<Fiesta_Role> Fiesta_Role { get; set; }
        public virtual DbSet<Fiesta_State> Fiesta_State { get; set; }
    
        public virtual ObjectResult<ValidateLogin_Result> ValidateLogin(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidateLogin_Result>("ValidateLogin", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GetEmployeeDetailsByEmail_Result> GetEmployeeDetailsByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeDetailsByEmail_Result>("GetEmployeeDetailsByEmail", emailParameter);
        }
    
        public virtual ObjectResult<GetRolesByEmp_Result> GetRolesByEmp(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRolesByEmp_Result>("GetRolesByEmp", roleIdParameter);
        }
    
        public virtual int InsertEmployeeStates(Nullable<int> empId, string states)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var statesParameter = states != null ?
                new ObjectParameter("States", states) :
                new ObjectParameter("States", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmployeeStates", empIdParameter, statesParameter);
        }
    
        public virtual int InsertEmployeeStores(Nullable<int> empId, string storeNo)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var storeNoParameter = storeNo != null ?
                new ObjectParameter("StoreNo", storeNo) :
                new ObjectParameter("StoreNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmployeeStores", empIdParameter, storeNoParameter);
        }
    
        public virtual int UpdateEmployeeRole(Nullable<int> empId, Nullable<int> roleId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmployeeRole", empIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<GetAllReports_Result> GetAllReports(Nullable<int> loginUserId, Nullable<int> roleId)
        {
            var loginUserIdParameter = loginUserId.HasValue ?
                new ObjectParameter("LoginUserId", loginUserId) :
                new ObjectParameter("LoginUserId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllReports_Result>("GetAllReports", loginUserIdParameter, roleIdParameter);
        }
    
        public virtual int InsertEmployeeReports(Nullable<int> empId, string storeNo, Nullable<int> reportId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var storeNoParameter = storeNo != null ?
                new ObjectParameter("StoreNo", storeNo) :
                new ObjectParameter("StoreNo", typeof(string));
    
            var reportIdParameter = reportId.HasValue ?
                new ObjectParameter("ReportId", reportId) :
                new ObjectParameter("ReportId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmployeeReports", empIdParameter, storeNoParameter, reportIdParameter);
        }
    
        public virtual int InsertFileUploads(string fileName, string uploadedBy, string reportName, Nullable<System.Guid> fileGUID)
        {
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var uploadedByParameter = uploadedBy != null ?
                new ObjectParameter("UploadedBy", uploadedBy) :
                new ObjectParameter("UploadedBy", typeof(string));
    
            var reportNameParameter = reportName != null ?
                new ObjectParameter("ReportName", reportName) :
                new ObjectParameter("ReportName", typeof(string));
    
            var fileGUIDParameter = fileGUID.HasValue ?
                new ObjectParameter("FileGUID", fileGUID) :
                new ObjectParameter("FileGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertFileUploads", fileNameParameter, uploadedByParameter, reportNameParameter, fileGUIDParameter);
        }
    
        public virtual ObjectResult<GetStoresByState_Result> GetStoresByState(string states, Nullable<int> roleId, Nullable<int> empId, Nullable<int> loginId)
        {
            var statesParameter = states != null ?
                new ObjectParameter("States", states) :
                new ObjectParameter("States", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var loginIdParameter = loginId.HasValue ?
                new ObjectParameter("LoginId", loginId) :
                new ObjectParameter("LoginId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStoresByState_Result>("GetStoresByState", statesParameter, roleIdParameter, empIdParameter, loginIdParameter);
        }
    
        public virtual int InsertEmployeeDetails(Nullable<int> empId, string states, string stores)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var statesParameter = states != null ?
                new ObjectParameter("States", states) :
                new ObjectParameter("States", typeof(string));
    
            var storesParameter = stores != null ?
                new ObjectParameter("Stores", stores) :
                new ObjectParameter("Stores", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmployeeDetails", empIdParameter, statesParameter, storesParameter);
        }
    
        public virtual ObjectResult<EmployeeRegistration_Result> EmployeeRegistration(string firstName, string lastName, string email, string password)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeRegistration_Result>("EmployeeRegistration", firstNameParameter, lastNameParameter, emailParameter, passwordParameter);
        }
    
        public virtual int DeleteReportsByStore(Nullable<int> empId, string storeNo)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var storeNoParameter = storeNo != null ?
                new ObjectParameter("StoreNo", storeNo) :
                new ObjectParameter("StoreNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteReportsByStore", empIdParameter, storeNoParameter);
        }
    
        public virtual ObjectResult<string> AddStore(Nullable<int> stateId, string storeNumber, string address, string city, string zipCode)
        {
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var storeNumberParameter = storeNumber != null ?
                new ObjectParameter("StoreNumber", storeNumber) :
                new ObjectParameter("StoreNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AddStore", stateIdParameter, storeNumberParameter, addressParameter, cityParameter, zipCodeParameter);
        }
    
        public virtual ObjectResult<Get_Commission_Result> Get_Commission(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> userId)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Commission_Result>("Get_Commission", startParameter, endParameter, userIdParameter);
        }
    
        public virtual ObjectResult<GetAllStatesByEmployee_Result> GetAllStatesByEmployee(Nullable<int> loginId)
        {
            var loginIdParameter = loginId.HasValue ?
                new ObjectParameter("LoginId", loginId) :
                new ObjectParameter("LoginId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllStatesByEmployee_Result>("GetAllStatesByEmployee", loginIdParameter);
        }
    
        public virtual ObjectResult<GetAllStates_Result1> GetAllStates(Nullable<int> roleId, Nullable<int> loginId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var loginIdParameter = loginId.HasValue ?
                new ObjectParameter("LoginId", loginId) :
                new ObjectParameter("LoginId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllStates_Result1>("GetAllStates", roleIdParameter, loginIdParameter);
        }
    
        public virtual ObjectResult<GetAllStatesByEmployee1_Result> GetAllStatesByEmployee1(Nullable<int> loginId)
        {
            var loginIdParameter = loginId.HasValue ?
                new ObjectParameter("LoginId", loginId) :
                new ObjectParameter("LoginId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllStatesByEmployee1_Result>("GetAllStatesByEmployee1", loginIdParameter);
        }
    }
}
